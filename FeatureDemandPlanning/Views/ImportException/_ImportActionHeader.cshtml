@using FeatureDemandPlanning.Model.Extensions
@using enums = FeatureDemandPlanning.Model.Enumerations

@model FeatureDemandPlanning.Model.ViewModel.ImportViewModel

<form>
    <input id="Action_IdentifierPrefix" type="hidden" value="@Model.IdentifierPrefix" />
</form>

<div class="well">

    @if (Model.CurrentAction == enums.ImportAction.AddMissingDerivative ||
                Model.CurrentAction == enums.ImportAction.MapMissingDerivative ||
                Model.CurrentAction == enums.ImportAction.MapOxoDerivative
        )
    {
        <div class="row">
            <div class="col-xs-4 text-right"><strong>BMC:</strong></div>
            <div class="col-xs-8">
                @Model.CurrentException.AdditionalData
            </div>
        </div>
    }

    @if (Model.CurrentAction == enums.ImportAction.MapOxoDerivative)
    {
        var derivative = Model.AvailableDerivatives.FirstOrDefault(d => d.DerivativeCode == Model.CurrentException.AdditionalData);
        <div class="vertical-spacer"></div>

        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Body:</strong>
            </div>
            <div class="col-xs-8">
                @derivative.Body.Name
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Engine:</strong>
            </div>
            <div class="col-xs-8">
                @derivative.Engine.Name
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Transmission:</strong>
            </div>
            <div class="col-xs-8">
                @derivative.Transmission.Name
            </div>
        </div>
        <div class="vertical-spacer"></div>
    }

    @if (Model.CurrentAction == enums.ImportAction.AddMissingFeature ||
                Model.CurrentAction == enums.ImportAction.MapMissingFeature)
    {
        <div class="row">
            <div class="col-xs-4 text-right"><strong>Import Feature Code:</strong></div>
            <div id="@(Model.IdentifierPrefix)_ImportFeatureCode" class="col-xs-8" data-target="@Model.CurrentException.ImportFeatureCode">
                @Model.CurrentException.ImportFeatureCode
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right"><strong>Import Feature:</strong></div>
            <div class="col-xs-8">
                @Model.CurrentException.ImportFeature
            </div>
        </div>
    }

    @if (Model.CurrentAction == enums.ImportAction.AddSpecialFeature)
    {
        <div class="row">
            <div class="col-xs-4 text-right"><strong>Special Feature:</strong>
            </div>
            <div class="col-xs-8">
                @{
                    switch (Model.CurrentException.ImportFeatureCode)
                    {
                        case "FULLYEAR" :
                            <span>Volume For Derivative (Full Year)</span>
                            break;
                        case "HALFYEAR":
                            <span>Volume For Derivative (Half Year)</span>
                            break;
                    }
                }
            </div>
        </div>
        <div class="vertical-spacer"></div>
    }

@if (Model.CurrentAction == enums.ImportAction.AddMissingTrim ||
        Model.CurrentAction == enums.ImportAction.MapOxoTrim)
    {
        <div class="row">
            <div class="col-xs-4 text-right"><strong>DPCK:</strong></div>
            <div class="col-xs-8">
                @Model.CurrentException.AdditionalData
            </div>
        </div>
    }
    @if (Model.CurrentAction == enums.ImportAction.MapMissingTrim)
    {
        <div class="row">
            <div class="col-xs-4 text-right"><strong>Import Trim:</strong></div>
            <div class="col-xs-8">
                @Model.CurrentException.AdditionalData
            </div>
        </div>
    }

    @if (Model.CurrentAction == enums.ImportAction.MapOxoTrim)
    {
        var trimLevel = Model.AvailableTrim.FirstOrDefault(d => d.DPCK == Model.CurrentException.AdditionalData);
        <div class="vertical-spacer"></div>

        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Description:</strong>
            </div>
            <div class="col-xs-8">
                @trimLevel.Name
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Level:</strong>
            </div>
            <div class="col-xs-8">
                @trimLevel.Level
            </div>
        </div>
       
        <div class="vertical-spacer"></div>
    }

    @if (Model.CurrentAction == enums.ImportAction.MapOxoFeature)
    {
        var feature = Model.AvailableFeatures.FirstOrDefault(f => f.FeatureCode == Model.CurrentException.AdditionalData);

        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Feature Code:</strong>
            </div>
            <div class="col-xs-8">
                @feature.FeatureCode
            </div>
        </div>

        <div class="vertical-spacer"></div>

        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Description:</strong>
            </div>
            <div class="col-xs-8">
                @feature.Description
            </div>
        </div>
    <div class="vertical-spacer"></div>
    }

    @if (Model.CurrentAction == enums.ImportAction.MapMissingMarket)
    {
        <div class="row">
            <div class="col-xs-4 text-right" id="@(Model.IdentifierPrefix)_ImportMarket" data-target="@Model.CurrentException.ImportMarket"><strong>Import Market:</strong></div>
            <div class="col-xs-8">
                @Model.CurrentException.ImportMarket
            </div>
        </div>
    }

    @if (Model.CurrentAction == enums.ImportAction.IgnoreException)
    {
        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Error Type:</strong>
            </div>
            <div class="col-xs-8">
                @Model.CurrentException.ErrorTypeDescription
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Sub Type:</strong>
            </div>
            <div class="col-xs-8">
                @Model.CurrentException.SubTypeDescription
            </div>
        </div>
        <div class="vertical-spacer">

        </div>
        <div class="row">
            <div class="col-xs-4 text-right">
                <strong>Message:</strong>
            </div>
            <div id="@(Model.IdentifierPrefix)_ErrorMessage" class=" col-xs-8">
                @Model.CurrentException.ErrorMessage
            </div>
        </div>
        <div class="vertical-spacer">

        </div>
    }

    <div class="row">
        <div class="col-xs-4 text-right">
            <strong>Programme:</strong>
        </div>
        <div class="col-xs-8">
            @Model.Programme.GetDisplayString()
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4 text-right">
            <strong>Gateway:</strong>
        </div>
        <div class="col-xs-8">
            @Model.Gateway
        </div>
    </div>
    <div class="row">
        <div class="col-xs-4 text-right"><strong>Document:</strong></div>
        <div class="col-xs-8">
            @Model.Document.Name
        </div>
    </div>
</div>
