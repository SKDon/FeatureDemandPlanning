@using enums = FeatureDemandPlanning.Model.Enumerations

@model FeatureDemandPlanning.Model.ViewModel.ImportViewModel

@if (Model.CurrentException.ErrorType == enums.ImportExceptionType.MissingMarket)
{
    <li>
        <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int)enums.ImportAction.MapMissingMarket)" data-content="@Model.CurrentException.ErrorMessage">
            <span class="glyphicon glyphicon-flag pull-left"></span> Map '@Model.CurrentException.ImportMarket' to OXO market...
        </a>
    </li>
}

@if (Model.CurrentException.ErrorType == enums.ImportExceptionType.MissingDerivative)
{
    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoBmc)
    {
        <li>
            <a href="@Url.Action("BMCPage", "DerivativeMapping", new { DocumentId = Model.CurrentException.DocumentId })">
                <span class="glyphicon glyphicon-pencil pull-left"></span> Edit Brochure Model Codes...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoHistoricDerivative)
    {
        <li>
            <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int) enums.ImportAction.MapOxoDerivative)" data-content="@Model.CurrentException.ErrorMessage">
                <span class="glyphicon glyphicon-link pull-left"></span> Map '@Model.CurrentException.AdditionalData' to historic Brochure Model Code(s)...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoOxoDerivative)
    {
        <li>
            <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int) enums.ImportAction.MapMissingDerivative)" data-content="@Model.CurrentException.ErrorMessage">
                <span class="glyphicon glyphicon-link pull-left"></span> Map '@Model.CurrentException.AdditionalData' to existing OXO Brochure Model Code...
            </a>
        </li>
    }
}

@if (Model.CurrentException.ErrorType == enums.ImportExceptionType.MissingFeature)
{
    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoSpecialFeature)
    {
        <li>
            <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int)enums.ImportAction.AddSpecialFeature)" data-content="@Model.CurrentException.ErrorMessage">
                <span class="glyphicon glyphicon-plus pull-left"></span> Add Special Feature...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoFeatureCode)
    {
        <li>
            <a href="@Url.Action("FeatureCodePage", "FeatureMapping", new { DocumentId = Model.CurrentException.DocumentId })">
                <span class="glyphicon glyphicon-pencil pull-left"></span> Edit Feature Codes...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoHistoricFeature)
    {
        <li>
            <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int) enums.ImportAction.MapOxoFeature)" data-content="@Model.CurrentException.ErrorMessage">
                <span class="glyphicon glyphicon-link pull-left"></span> Map OXO Feature Code '@Model.CurrentException.AdditionalData' to historic Feature Code(s)...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoOxoFeature)
    {
        <li>
            <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int) enums.ImportAction.MapMissingFeature)" data-content="@Model.CurrentException.ErrorMessage">
                <span class="glyphicon glyphicon-link pull-left"></span> Map historic Feature Code '@Model.CurrentException.ImportFeatureCode' to existing OXO Feature Code...
            </a>
        </li>
    <li>
        <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int)enums.ImportAction.AddSpecialFeature)" data-content="@Model.CurrentException.ErrorMessage">
            <span class="glyphicon glyphicon-plus pull-left"></span> Add Special Feature '@Model.CurrentException.ImportFeatureCode'...
        </a>
    </li>
    }

}

@if (Model.CurrentException.ErrorType == enums.ImportExceptionType.MissingTrim)
{
    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoDpck)
    {
        <li>
            <a href="@Url.Action("DPCKPage", "TrimMapping", new { DocumentId = Model.CurrentException.DocumentId })">
                <span class="glyphicon glyphicon-pencil pull-left"></span> Edit DPCK Codes...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoHistoricTrim)
    {
        <li>
            <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int) enums.ImportAction.MapOxoTrim)" data-content="@Model.CurrentException.ErrorMessage">
                <span class="glyphicon glyphicon-link pull-left"></span> Map OXO trim to historic data...
            </a>
        </li>
    }

    if (Model.CurrentException.SubType == enums.ImportExceptionType.NoOxoTrim)
    {
        <li>
        <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int)enums.ImportAction.MapMissingTrim)" data-content="@Model.CurrentException.ErrorMessage">
            <span class="glyphicon glyphicon-link pull-left"></span> Map historic trim level '@Model.CurrentException.ImportTrim' to existing OXO DPCK...
        </a>
    </li>
    }


}

<li class="divider"></li>
<li>
    <a tabindex="-1" href="#" data-target="@Model.CurrentException.FdpImportErrorId" data-role="@((int)enums.ImportAction.IgnoreException)" data-content="@Model.CurrentException.ErrorMessage">
        <span class="glyphicon glyphicon-remove pull-left"></span> Ignore Error...
    </a>
</li>
