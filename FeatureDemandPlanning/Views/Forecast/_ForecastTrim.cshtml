@using FeatureDemandPlanning.Model;
@using enums = FeatureDemandPlanning.Model.Enumerations;

@model FeatureDemandPlanning.Model.ViewModel.ForecastComparisonViewModel

<div id="#forecastTrimDialog"></div>

<div class="col-lg-12" data-index="2">
    <div class="panel panel-primary">

        <div class="panel-heading">
            <div class="panel-title">Trim Level</div>

        </div>

        <div class="panel-body">

            <!-- Placeholder for fixed columns for scrollable table -->
            <div id="scrollerFixed">
            </div>

            <!-- Scrollable table scrolls horizontally if content too large for panel -->
            <div id="scroller" class="default-skin subscribers-notifyResize">    
            <table class="table table-striped table-bordered table-responsive dataTable">
                    <thead>
                        <tr>
                            <th class="text-center">
                                <div class="text-center-insets">Car Line</div>
                            </th>
                            <th class="text-center">
                                <div class="text-center-insets">Model Year</div>
</th>
                            <th class="text-center" colspan="@(Model.Forecast.ForecastVehicle.TrimMappings.Count())"><div class="text-center-insets">Trim Levels</div></th>
                        </tr>
                        <tr>
                            <th>
                                <div>@Model.Forecast.ForecastVehicle.Description</div>
                            </th>
                            <th>
                                <div class="text-center">@Model.Forecast.ForecastVehicle.ModelYear</div>
                            </th>
                            @foreach (var trimMapping in Model.Forecast.ForecastVehicle.TrimMappings)
                            {
                                <th>
                                    <div class="text-center">
                                        <p>@trimMapping.ForecastVehicleTrim.Name</p>
                                        @if (!string.IsNullOrEmpty(trimMapping.ForecastVehicleTrim.DPCK))
                                        {
                                            <small>(@trimMapping.ForecastVehicleTrim.DPCK)</small>
                                        }
                                    </div>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var comparisonVehicle in Model.NonEmptyComparisonVehicles)
                        {
                            <tr>
                                <td class="text-left">@(comparisonVehicle.VehicleIndex). @comparisonVehicle.Vehicle.Description</td>
                                <td class="text-center"><div class="text-center-insets">@comparisonVehicle.Vehicle.ModelYear</div></td>

                                @foreach (var trimMapping in Model.Forecast.ForecastVehicle.TrimMappings)
                                {
                                    var configuredMappings = Enumerable.Empty<ModelTrim>();
                                    if (comparisonVehicle.Vehicle.TrimMappings != null && comparisonVehicle.Vehicle.TrimMappings.Any())
                                    {
                                        var matchingMappings = comparisonVehicle.Vehicle.TrimMappings
                                            .Where(m => m.ForecastVehicleTrim.Id == trimMapping.ForecastVehicleTrim.Id)
                                            .FirstOrDefault();
                                        if (matchingMappings != null)
                                        {
                                            configuredMappings = matchingMappings.ComparisonVehicleTrimMappings;
                                        }
                                    }
                                    <td class="text-center">
                                        @if (comparisonVehicle.Vehicle.TrimMappings != null && comparisonVehicle.Vehicle.TrimMappings.Any())
                                        {
                                            <div class="text-center-insets">
                                                <a href="#" class="forecast-trim-link modal-listener subscribers-notifyTrimMappingChanged" data-index="@comparisonVehicle.VehicleIndex" data-forecast-trim-id="@trimMapping.ForecastVehicleTrim.Id">
                                                    @{
                                            if (configuredMappings.Any())
                                            {
                                                @configuredMappings.ToCommaSeperatedList();
                                            }
                                            else
                                            {
                                                <div title="No mappings configured" data-index="@comparisonVehicle.VehicleIndex" data-forecast-trim-id="@trimMapping.ForecastVehicleTrim.Id">-</div>
                                            }
                                                    }
                                                </a>
                                            </div>
                                            <div class="forecast-trim-link triangle" data-index="@comparisonVehicle.VehicleIndex" data-forecast-trim-id="@trimMapping.ForecastVehicleTrim.Id"></div>
                                            <i class="forecast-trim-link glyphicon glyphicon-pencil pencil" data-index="@comparisonVehicle.VehicleIndex" data-forecast-trim-id="@trimMapping.ForecastVehicleTrim.Id"></i>
                                        }
                                        else
                                        {
                                            <div class="text-center-insets" title="No trim levels available for comparison vehicle">N/A</div>
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
    </div>

</div>
</div>