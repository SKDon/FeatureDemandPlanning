
/*===============================================================================
 *
 *      Code Comment Block Here.
 *      
 *      Generated by Code Generator on 03/02/2015 12:10  
 * 
 *===============================================================================
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using FeatureDemandPlanning.Dapper;
using System.ComponentModel.DataAnnotations;

namespace FeatureDemandPlanning.BusinessObjects
{
    public class ChangeDiary : BusinessObject
    {
        [Required]
        public int Id { get; set; }
        [Required]
        public int OXODocId { get; set; }
        [Required]
        public int ProgrammeId { get; set; }
        [Required]
        [StringLength(500)]
        public string VersionInfo { get; set; }
        public string EntryHeader { get; set; }
        [Required]
        public DateTime EntryDate { get; set; }
        [Required]
        public string Markets { get; set; }
        [Required]        
        public string Models { get; set; }
        [Required]        
        public string Features { get; set; }
        public string CurrentFitment { get; set; }
        public string ProposedFitment { get; set; }
        [Required]        
        public string Comment { get; set; }
        public string PricingStatus { get; set; }
        public string DigitalStatus { get; set; }
        [Required]  
        [StringLength(100)]
        public string Requester { get; set; }
        [StringLength(10, MinimumLength=8, ErrorMessage="PACN must be at least 8 characters long.")]
        public string PACN { get; set; }
        [StringLength(100)]
        public string ETracker { get; set; }
        [StringLength(100)]
        public string OrderCall { get; set; }
        public DateTime? BuildEffectiveDate { get; set; }

        public string EntryDateOnly
        {
            get
            {
                return EntryDate.ToString("dd/MM/yyyy");
            }
        }

        public string BuildEffectiveDateOnly
        {
            get
            {
                if (BuildEffectiveDate.HasValue)
                    return BuildEffectiveDate.Value.ToString("dd/MM/yyyy");
                else
                    return "";
            }
        }
        
        
        public string EntryDateString { 
            get{
                return EntryDate.ToString("yyyy-MM-dd");
            } 
        }
        public string BuildEffectiveDateString {
            get
            {
                if (BuildEffectiveDate.HasValue)
                    return BuildEffectiveDate.Value.ToString("yyyy-MM-dd");
                else
                    return "";
            }
        }
        

        // A blank constructor
        public ChangeDiary() {;}
    }
}