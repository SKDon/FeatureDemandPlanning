//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FeatureDemandPlanning.Wcf.TestClient.FdpService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportQueue", Namespace="http://schemas.datacontract.org/2004/07/FeatureDemandPlanning.Model")]
    [System.SerializableAttribute()]
    public partial class ImportQueue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CreatedByk__BackingFieldField;
        
        private System.DateTime CreatedOnk__BackingFieldField;
        
        private string Descriptionk__BackingFieldField;
        
        private int ErrorCountk__BackingFieldField;
        
        private string FilePathk__BackingFieldField;
        
        private string Gatewayk__BackingFieldField;
        
        private bool HasErrorsk__BackingFieldField;
        
        private System.Nullable<int> ImportQueueIdk__BackingFieldField;
        
        private FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportStatus ImportStatusk__BackingFieldField;
        
        private FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportType ImportTypek__BackingFieldField;
        
        private string ModelYeark__BackingFieldField;
        
        private string OriginalFileNamek__BackingFieldField;
        
        private int ProgrammeIdk__BackingFieldField;
        
        private System.Nullable<int> TotalPagesk__BackingFieldField;
        
        private System.Nullable<int> TotalRecordsk__BackingFieldField;
        
        private System.Nullable<System.DateTime> UpdatedOnk__BackingFieldField;
        
        private string VehicleAKAk__BackingFieldField;
        
        private string VehicleNamek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedBy>k__BackingField", IsRequired=true)]
        public string CreatedByk__BackingField {
            get {
                return this.CreatedByk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByk__BackingFieldField, value) != true)) {
                    this.CreatedByk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedOn>k__BackingField", IsRequired=true)]
        public System.DateTime CreatedOnk__BackingField {
            get {
                return this.CreatedOnk__BackingFieldField;
            }
            set {
                if ((this.CreatedOnk__BackingFieldField.Equals(value) != true)) {
                    this.CreatedOnk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedOnk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Description>k__BackingField", IsRequired=true)]
        public string Descriptionk__BackingField {
            get {
                return this.Descriptionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Descriptionk__BackingFieldField, value) != true)) {
                    this.Descriptionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Descriptionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ErrorCount>k__BackingField", IsRequired=true)]
        public int ErrorCountk__BackingField {
            get {
                return this.ErrorCountk__BackingFieldField;
            }
            set {
                if ((this.ErrorCountk__BackingFieldField.Equals(value) != true)) {
                    this.ErrorCountk__BackingFieldField = value;
                    this.RaisePropertyChanged("ErrorCountk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FilePath>k__BackingField", IsRequired=true)]
        public string FilePathk__BackingField {
            get {
                return this.FilePathk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathk__BackingFieldField, value) != true)) {
                    this.FilePathk__BackingFieldField = value;
                    this.RaisePropertyChanged("FilePathk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Gateway>k__BackingField", IsRequired=true)]
        public string Gatewayk__BackingField {
            get {
                return this.Gatewayk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Gatewayk__BackingFieldField, value) != true)) {
                    this.Gatewayk__BackingFieldField = value;
                    this.RaisePropertyChanged("Gatewayk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<HasErrors>k__BackingField", IsRequired=true)]
        public bool HasErrorsk__BackingField {
            get {
                return this.HasErrorsk__BackingFieldField;
            }
            set {
                if ((this.HasErrorsk__BackingFieldField.Equals(value) != true)) {
                    this.HasErrorsk__BackingFieldField = value;
                    this.RaisePropertyChanged("HasErrorsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ImportQueueId>k__BackingField", IsRequired=true)]
        public System.Nullable<int> ImportQueueIdk__BackingField {
            get {
                return this.ImportQueueIdk__BackingFieldField;
            }
            set {
                if ((this.ImportQueueIdk__BackingFieldField.Equals(value) != true)) {
                    this.ImportQueueIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ImportQueueIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ImportStatus>k__BackingField", IsRequired=true)]
        public FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportStatus ImportStatusk__BackingField {
            get {
                return this.ImportStatusk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportStatusk__BackingFieldField, value) != true)) {
                    this.ImportStatusk__BackingFieldField = value;
                    this.RaisePropertyChanged("ImportStatusk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ImportType>k__BackingField", IsRequired=true)]
        public FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportType ImportTypek__BackingField {
            get {
                return this.ImportTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportTypek__BackingFieldField, value) != true)) {
                    this.ImportTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("ImportTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ModelYear>k__BackingField", IsRequired=true)]
        public string ModelYeark__BackingField {
            get {
                return this.ModelYeark__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelYeark__BackingFieldField, value) != true)) {
                    this.ModelYeark__BackingFieldField = value;
                    this.RaisePropertyChanged("ModelYeark__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<OriginalFileName>k__BackingField", IsRequired=true)]
        public string OriginalFileNamek__BackingField {
            get {
                return this.OriginalFileNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalFileNamek__BackingFieldField, value) != true)) {
                    this.OriginalFileNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("OriginalFileNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ProgrammeId>k__BackingField", IsRequired=true)]
        public int ProgrammeIdk__BackingField {
            get {
                return this.ProgrammeIdk__BackingFieldField;
            }
            set {
                if ((this.ProgrammeIdk__BackingFieldField.Equals(value) != true)) {
                    this.ProgrammeIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ProgrammeIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TotalPages>k__BackingField", IsRequired=true)]
        public System.Nullable<int> TotalPagesk__BackingField {
            get {
                return this.TotalPagesk__BackingFieldField;
            }
            set {
                if ((this.TotalPagesk__BackingFieldField.Equals(value) != true)) {
                    this.TotalPagesk__BackingFieldField = value;
                    this.RaisePropertyChanged("TotalPagesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TotalRecords>k__BackingField", IsRequired=true)]
        public System.Nullable<int> TotalRecordsk__BackingField {
            get {
                return this.TotalRecordsk__BackingFieldField;
            }
            set {
                if ((this.TotalRecordsk__BackingFieldField.Equals(value) != true)) {
                    this.TotalRecordsk__BackingFieldField = value;
                    this.RaisePropertyChanged("TotalRecordsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<UpdatedOn>k__BackingField", IsRequired=true)]
        public System.Nullable<System.DateTime> UpdatedOnk__BackingField {
            get {
                return this.UpdatedOnk__BackingFieldField;
            }
            set {
                if ((this.UpdatedOnk__BackingFieldField.Equals(value) != true)) {
                    this.UpdatedOnk__BackingFieldField = value;
                    this.RaisePropertyChanged("UpdatedOnk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<VehicleAKA>k__BackingField", IsRequired=true)]
        public string VehicleAKAk__BackingField {
            get {
                return this.VehicleAKAk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleAKAk__BackingFieldField, value) != true)) {
                    this.VehicleAKAk__BackingFieldField = value;
                    this.RaisePropertyChanged("VehicleAKAk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<VehicleName>k__BackingField", IsRequired=true)]
        public string VehicleNamek__BackingField {
            get {
                return this.VehicleNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleNamek__BackingFieldField, value) != true)) {
                    this.VehicleNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("VehicleNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportStatus", Namespace="http://schemas.datacontract.org/2004/07/FeatureDemandPlanning.Model")]
    [System.SerializableAttribute()]
    public partial class ImportStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Descriptionk__BackingFieldField;
        
        private FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportStatus1 ImportStatusCodek__BackingFieldField;
        
        private int NumberOfRecordsFailedk__BackingFieldField;
        
        private int NumberOfRecordsProcessedk__BackingFieldField;
        
        private string Statusk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Description>k__BackingField", IsRequired=true)]
        public string Descriptionk__BackingField {
            get {
                return this.Descriptionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Descriptionk__BackingFieldField, value) != true)) {
                    this.Descriptionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Descriptionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ImportStatusCode>k__BackingField", IsRequired=true)]
        public FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportStatus1 ImportStatusCodek__BackingField {
            get {
                return this.ImportStatusCodek__BackingFieldField;
            }
            set {
                if ((this.ImportStatusCodek__BackingFieldField.Equals(value) != true)) {
                    this.ImportStatusCodek__BackingFieldField = value;
                    this.RaisePropertyChanged("ImportStatusCodek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NumberOfRecordsFailed>k__BackingField", IsRequired=true)]
        public int NumberOfRecordsFailedk__BackingField {
            get {
                return this.NumberOfRecordsFailedk__BackingFieldField;
            }
            set {
                if ((this.NumberOfRecordsFailedk__BackingFieldField.Equals(value) != true)) {
                    this.NumberOfRecordsFailedk__BackingFieldField = value;
                    this.RaisePropertyChanged("NumberOfRecordsFailedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NumberOfRecordsProcessed>k__BackingField", IsRequired=true)]
        public int NumberOfRecordsProcessedk__BackingField {
            get {
                return this.NumberOfRecordsProcessedk__BackingFieldField;
            }
            set {
                if ((this.NumberOfRecordsProcessedk__BackingFieldField.Equals(value) != true)) {
                    this.NumberOfRecordsProcessedk__BackingFieldField = value;
                    this.RaisePropertyChanged("NumberOfRecordsProcessedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Status>k__BackingField", IsRequired=true)]
        public string Statusk__BackingField {
            get {
                return this.Statusk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Statusk__BackingFieldField, value) != true)) {
                    this.Statusk__BackingFieldField = value;
                    this.RaisePropertyChanged("Statusk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportType", Namespace="http://schemas.datacontract.org/2004/07/FeatureDemandPlanning.Model")]
    [System.SerializableAttribute()]
    public partial class ImportType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Descriptionk__BackingFieldField;
        
        private FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportType1 ImportTypeDefinitionk__BackingFieldField;
        
        private string Typek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Description>k__BackingField", IsRequired=true)]
        public string Descriptionk__BackingField {
            get {
                return this.Descriptionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Descriptionk__BackingFieldField, value) != true)) {
                    this.Descriptionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Descriptionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ImportTypeDefinition>k__BackingField", IsRequired=true)]
        public FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportType1 ImportTypeDefinitionk__BackingField {
            get {
                return this.ImportTypeDefinitionk__BackingFieldField;
            }
            set {
                if ((this.ImportTypeDefinitionk__BackingFieldField.Equals(value) != true)) {
                    this.ImportTypeDefinitionk__BackingFieldField = value;
                    this.RaisePropertyChanged("ImportTypeDefinitionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Type>k__BackingField", IsRequired=true)]
        public string Typek__BackingField {
            get {
                return this.Typek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Typek__BackingFieldField, value) != true)) {
                    this.Typek__BackingFieldField = value;
                    this.RaisePropertyChanged("Typek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportStatus", Namespace="http://schemas.datacontract.org/2004/07/FeatureDemandPlanning.Model.Enumerations")]
    public enum ImportStatus1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queued = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportType", Namespace="http://schemas.datacontract.org/2004/07/FeatureDemandPlanning.Model.Enumerations")]
    public enum ImportType1 : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PPO = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FdpService.IFdpService")]
    public interface IFdpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFdpService/IsAlive", ReplyAction="http://tempuri.org/IFdpService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFdpService/IsAlive", ReplyAction="http://tempuri.org/IFdpService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFdpService/ProcessQueuedItem", ReplyAction="http://tempuri.org/IFdpService/ProcessQueuedItemResponse")]
        FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportQueue ProcessQueuedItem(int importQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFdpService/ProcessQueuedItem", ReplyAction="http://tempuri.org/IFdpService/ProcessQueuedItemResponse")]
        System.Threading.Tasks.Task<FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportQueue> ProcessQueuedItemAsync(int importQueueId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFdpServiceChannel : FeatureDemandPlanning.Wcf.TestClient.FdpService.IFdpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FdpServiceClient : System.ServiceModel.ClientBase<FeatureDemandPlanning.Wcf.TestClient.FdpService.IFdpService>, FeatureDemandPlanning.Wcf.TestClient.FdpService.IFdpService {
        
        public FdpServiceClient() {
        }
        
        public FdpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FdpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FdpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FdpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        public FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportQueue ProcessQueuedItem(int importQueueId) {
            return base.Channel.ProcessQueuedItem(importQueueId);
        }
        
        public System.Threading.Tasks.Task<FeatureDemandPlanning.Wcf.TestClient.FdpService.ImportQueue> ProcessQueuedItemAsync(int importQueueId) {
            return base.Channel.ProcessQueuedItemAsync(importQueueId);
        }
    }
}
